define([
    'mesh/model',
    'mesh/fields'
], function(model, fields) {

var Model = model.Model.extend({__name__:"fileplanimport",__requests__:{query:model.Request({mimetype:"application/x-www-form-urlencoded",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{total:fields.IntegerField({minimum:0,name:"total"}),resources:fields.Sequence({item:fields.Structure({structure:{status:fields.EnumerationField({name:"status",enumeration:["running","completed","cancelled","failed"]}),file_plan_id:fields.IntegerField({required:true,name:"file_plan_id"}),replace_existing:fields.BooleanField({default_value:false,name:"replace_existing"}),id:fields.IntegerField({required:true,name:"id"}),parent_series_id:fields.IntegerField({name:"parent_series_id"}),volume_id:fields.IntegerField({required:true,name:"volume_id"}),volume_path:fields.TextField({min_length:1,required:true,name:"volume_path"}),only_children:fields.BooleanField({default_value:false,name:"only_children"})}}),required:true,name:"resources"})}})}},url:"/api/v1/fileplanimport",token:"[[id]]",schema:fields.Structure({name:"request",structure:{sort:fields.QuerySortField({name:"sort"}),query:fields.TextField({name:"query"}),limit:fields.IntegerField({minimum:1,name:"limit"}),offset:fields.IntegerField({minimum:0,name:"offset"})}}),method:"GET",name:"query"}),create:model.Request({mimetype:"application/json",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{id:fields.IntegerField({required:true,name:"id"})}})}},url:"/api/v1/fileplanimport",token:"[[id]]",schema:fields.Structure({name:"request",structure:{status:fields.EnumerationField({name:"status",enumeration:["running","completed","cancelled","failed"]}),file_plan_id:fields.IntegerField({required:true,name:"file_plan_id"}),replace_existing:fields.BooleanField({default_value:false,name:"replace_existing"}),parent_series_id:fields.IntegerField({name:"parent_series_id"}),volume_id:fields.IntegerField({required:true,name:"volume_id"}),volume_path:fields.TextField({min_length:1,required:true,name:"volume_path"}),only_children:fields.BooleanField({default_value:false,name:"only_children"})}}),method:"POST",name:"create"}),update:model.Request({mimetype:"application/json",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{id:fields.IntegerField({required:true,name:"id"})}})}},url:"/api/v1/fileplanimport/[[id]]",token:"[[id]]",schema:fields.Structure({name:"request",structure:{status:fields.EnumerationField({name:"status",enumeration:["running","completed","cancelled","failed"]}),file_plan_id:fields.IntegerField({name:"file_plan_id"}),replace_existing:fields.BooleanField({default_value:false,name:"replace_existing"}),parent_series_id:fields.IntegerField({name:"parent_series_id"}),volume_id:fields.IntegerField({name:"volume_id"}),volume_path:fields.TextField({min_length:1,name:"volume_path"}),only_children:fields.BooleanField({default_value:false,name:"only_children"})}}),method:"POST",name:"update"}),get:model.Request({mimetype:"application/x-www-form-urlencoded",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{status:fields.EnumerationField({name:"status",enumeration:["running","completed","cancelled","failed"]}),file_plan_id:fields.IntegerField({required:true,name:"file_plan_id"}),replace_existing:fields.BooleanField({default_value:false,name:"replace_existing"}),id:fields.IntegerField({required:true,name:"id"}),parent_series_id:fields.IntegerField({name:"parent_series_id"}),volume_id:fields.IntegerField({required:true,name:"volume_id"}),volume_path:fields.TextField({min_length:1,required:true,name:"volume_path"}),only_children:fields.BooleanField({default_value:false,name:"only_children"})}})}},url:"/api/v1/fileplanimport/[[id]]",token:"[[id]]",schema:fields.Structure({name:"request",structure:{attrs:fields.TextField({name:"attrs"})}}),method:"GET",name:"get"})}});




return Model;

});
