define([
    'vendor/gloss/data/model',
    'vendor/gloss/data/fields'
], function(model, fields) {

var Model = model.Model.extend({__name__:"recordseries",__requests__:{get:model.Request({mimetype:"application/x-www-form-urlencoded",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{retention_period_units:fields.EnumerationField({name:"retention_period_units",enumeration:["days","weeks","months","years"]}),valid_properties:fields.Sequence({item:fields.TextField({}),name:"valid_properties"}),target_volume_id:fields.IntegerField({name:"target_volume_id"}),file_plan_id:fields.IntegerField({name:"file_plan_id"}),retention_period:fields.IntegerField({name:"retention_period"}),threshold_attr:fields.EnumerationField({name:"threshold_attr",enumeration:["last_accessed","last_modified"]}),target_volume_profile_id:fields.IntegerField({name:"target_volume_profile_id"}),id:fields.IntegerField({required:true,name:"id"}),isparent:fields.BooleanField({name:"isparent"}),parent_id:fields.IntegerField({name:"parent_id"}),valid:fields.BooleanField({name:"valid"}),threshold_units:fields.EnumerationField({name:"threshold_units",enumeration:["days","weeks","months","years"]}),status:fields.EnumerationField({name:"status",enumeration:["disabled","enabled"]}),description:fields.TextField({name:"description"}),schedule:fields.Structure({name:"schedule",structure:{monthly_weekday_occurrence:fields.IntegerField({name:"monthly_weekday_occurrence"}),repeat:fields.IntegerField({minimum:1,name:"repeat"}),interval:fields.EnumerationField({required:true,name:"interval",enumeration:["none","daily","weekly","monthly","yearly"]}),monthly_weekday:fields.IntegerField({minimum:0,name:"monthly_weekday",maximum:6}),monthly_style:fields.EnumerationField({name:"monthly_style",enumeration:["date","weekday"]}),time:fields.Sequence({item:fields.IntegerField({}),name:"time"}),date:fields.DateField({name:"date"}),monthly_date:fields.IntegerField({minimum:-1,name:"monthly_date",maximum:31}),weekly_days:fields.Sequence({item:fields.IntegerField({}),name:"weekly_days"})}}),path_linked:fields.BooleanField({name:"path_linked"}),path:fields.TextField({name:"path"}),threshold_value:fields.IntegerField({minimum:1,name:"threshold_value"}),classifications:fields.Sequence({item:fields.Structure({structure:{id:fields.IntegerField({name:"id"}),name:fields.TextField({name:"name"})}}),name:"classifications"}),name:fields.TextField({min_length:1,required:true,name:"name"}),last_run:fields.Structure({name:"last_run",structure:{status:fields.EnumerationField({name:"status",enumeration:["ok","warnings","errors","failed","inprogress","neverrun"]}),warning_count:fields.IntegerField({name:"warning_count"}),identified_count:fields.IntegerField({name:"identified_count"}),identified_up_to_date:fields.BooleanField({name:"identified_up_to_date"}),success_count:fields.IntegerField({name:"success_count"}),error_count:fields.IntegerField({name:"error_count"}),date:fields.DateTimeField({name:"date"})}}),frequency:fields.EnumerationField({name:"frequency",enumeration:["none","daily","weekly","monthly","yearly"]}),action:fields.EnumerationField({name:"action",enumeration:["copy","move"]})}})}},url:"/api/v1/recordseries/[[id]]",token:"[[id]]",schema:fields.Structure({name:"request",structure:{attrs:fields.TextField({name:"attrs"})}}),method:"GET",name:"get"}),query_tree:model.Request({mimetype:"application/x-www-form-urlencoded",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{total:fields.IntegerField({minimum:0,name:"total"}),resources:fields.Sequence({item:fields.Structure({structure:{retention_period_units:fields.EnumerationField({name:"retention_period_units",enumeration:["days","weeks","months","years"]}),valid_properties:fields.Sequence({item:fields.TextField({}),name:"valid_properties"}),target_volume_id:fields.IntegerField({name:"target_volume_id"}),file_plan_id:fields.IntegerField({name:"file_plan_id"}),retention_period:fields.IntegerField({name:"retention_period"}),threshold_attr:fields.EnumerationField({name:"threshold_attr",enumeration:["last_accessed","last_modified"]}),target_volume_profile_id:fields.IntegerField({name:"target_volume_profile_id"}),id:fields.IntegerField({required:true,name:"id"}),isparent:fields.BooleanField({name:"isparent"}),parent_id:fields.IntegerField({name:"parent_id"}),valid:fields.BooleanField({name:"valid"}),threshold_units:fields.EnumerationField({name:"threshold_units",enumeration:["days","weeks","months","years"]}),status:fields.EnumerationField({name:"status",enumeration:["disabled","enabled"]}),description:fields.TextField({name:"description"}),schedule:fields.Structure({name:"schedule",structure:{monthly_weekday_occurrence:fields.IntegerField({name:"monthly_weekday_occurrence"}),repeat:fields.IntegerField({minimum:1,name:"repeat"}),interval:fields.EnumerationField({required:true,name:"interval",enumeration:["none","daily","weekly","monthly","yearly"]}),monthly_weekday:fields.IntegerField({minimum:0,name:"monthly_weekday",maximum:6}),monthly_style:fields.EnumerationField({name:"monthly_style",enumeration:["date","weekday"]}),time:fields.Sequence({item:fields.IntegerField({}),name:"time"}),date:fields.DateField({name:"date"}),monthly_date:fields.IntegerField({minimum:-1,name:"monthly_date",maximum:31}),weekly_days:fields.Sequence({item:fields.IntegerField({}),name:"weekly_days"})}}),path_linked:fields.BooleanField({name:"path_linked"}),path:fields.TextField({name:"path"}),threshold_value:fields.IntegerField({minimum:1,name:"threshold_value"}),classifications:fields.Sequence({item:fields.Structure({structure:{id:fields.IntegerField({name:"id"}),name:fields.TextField({name:"name"})}}),name:"classifications"}),name:fields.TextField({min_length:1,required:true,name:"name"}),last_run:fields.Structure({name:"last_run",structure:{status:fields.EnumerationField({name:"status",enumeration:["ok","warnings","errors","failed","inprogress","neverrun"]}),warning_count:fields.IntegerField({name:"warning_count"}),identified_count:fields.IntegerField({name:"identified_count"}),identified_up_to_date:fields.BooleanField({name:"identified_up_to_date"}),success_count:fields.IntegerField({name:"success_count"}),error_count:fields.IntegerField({name:"error_count"}),date:fields.DateTimeField({name:"date"})}}),frequency:fields.EnumerationField({name:"frequency",enumeration:["none","daily","weekly","monthly","yearly"]}),action:fields.EnumerationField({name:"action",enumeration:["copy","move"]})}}),required:true,name:"resources"})}})}},url:"/api/v1/recordseries",token:"[[id]]",schema:fields.Structure({structure:{file_plan_id:fields.IntegerField({required:true,name:"file_plan_id"}),path:fields.TextListField({min_length:1,separator:",",name:"path"}),tree:fields.BooleanField({required:true,name:"tree"}),recursive:fields.BooleanField({required:true,name:"recursive"}),root_id:fields.IntegerField({name:"root_id"})}}),method:"GET",name:"query_tree"}),create:model.Request({mimetype:"application/json",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{isparent:fields.BooleanField({name:"isparent"}),valid_properties:fields.Sequence({item:fields.TextField({}),name:"valid_properties"}),valid:fields.BooleanField({name:"valid"}),id:fields.IntegerField({required:true,name:"id"})}})}},url:"/api/v1/recordseries",token:"[[id]]",schema:fields.Structure({name:"request",structure:{status:fields.EnumerationField({name:"status",enumeration:["disabled","enabled"]}),threshold_value:fields.IntegerField({minimum:1,name:"threshold_value"}),retention_period_units:fields.EnumerationField({name:"retention_period_units",enumeration:["days","weeks","months","years"]}),description:fields.TextField({name:"description"}),push_attrs:fields.Sequence({item:fields.TextField({}),name:"push_attrs"}),path_linked:fields.BooleanField({name:"path_linked"}),schedule:fields.Structure({name:"schedule",structure:{monthly_weekday_occurrence:fields.IntegerField({name:"monthly_weekday_occurrence"}),repeat:fields.IntegerField({minimum:1,name:"repeat"}),interval:fields.EnumerationField({required:true,name:"interval",enumeration:["none","daily","weekly","monthly","yearly"]}),monthly_weekday:fields.IntegerField({minimum:0,name:"monthly_weekday",maximum:6}),monthly_style:fields.EnumerationField({name:"monthly_style",enumeration:["date","weekday"]}),time:fields.Sequence({item:fields.IntegerField({}),name:"time"}),date:fields.DateField({name:"date"}),monthly_date:fields.IntegerField({minimum:-1,name:"monthly_date",maximum:31}),weekly_days:fields.Sequence({item:fields.IntegerField({}),name:"weekly_days"})}}),target_volume_id:fields.IntegerField({name:"target_volume_id"}),name:fields.TextField({min_length:1,required:true,name:"name"}),parent_id:fields.IntegerField({name:"parent_id"}),retention_period:fields.IntegerField({name:"retention_period"}),threshold_attr:fields.EnumerationField({name:"threshold_attr",enumeration:["last_accessed","last_modified"]}),frequency:fields.EnumerationField({name:"frequency",enumeration:["none","daily","weekly","monthly","yearly"]}),target_volume_profile_id:fields.IntegerField({name:"target_volume_profile_id"}),path:fields.TextField({name:"path"}),action:fields.EnumerationField({name:"action",enumeration:["copy","move"]}),classifications:fields.Sequence({item:fields.Structure({structure:{id:fields.IntegerField({name:"id"})}}),name:"classifications"}),threshold_units:fields.EnumerationField({name:"threshold_units",enumeration:["days","weeks","months","years"]})}}),method:"POST",name:"create"}),update:model.Request({mimetype:"application/json",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{isparent:fields.BooleanField({name:"isparent"}),valid_properties:fields.Sequence({item:fields.TextField({}),name:"valid_properties"}),valid:fields.BooleanField({name:"valid"}),id:fields.IntegerField({required:true,name:"id"})}})}},url:"/api/v1/recordseries/[[id]]",token:"[[id]]",schema:fields.Structure({name:"request",structure:{status:fields.EnumerationField({name:"status",enumeration:["disabled","enabled"]}),threshold_value:fields.IntegerField({minimum:1,name:"threshold_value"}),retention_period_units:fields.EnumerationField({name:"retention_period_units",enumeration:["days","weeks","months","years"]}),description:fields.TextField({name:"description"}),push_attrs:fields.Sequence({item:fields.TextField({}),name:"push_attrs"}),path_linked:fields.BooleanField({name:"path_linked"}),schedule:fields.Structure({name:"schedule",structure:{monthly_weekday_occurrence:fields.IntegerField({name:"monthly_weekday_occurrence"}),repeat:fields.IntegerField({minimum:1,name:"repeat"}),time:fields.Sequence({item:fields.IntegerField({}),name:"time"}),interval:fields.EnumerationField({required:true,name:"interval",enumeration:["none","daily","weekly","monthly","yearly"]}),monthly_style:fields.EnumerationField({name:"monthly_style",enumeration:["date","weekday"]}),monthly_weekday:fields.IntegerField({minimum:0,name:"monthly_weekday",maximum:6}),date:fields.DateField({name:"date"}),monthly_date:fields.IntegerField({minimum:-1,name:"monthly_date",maximum:31}),weekly_days:fields.Sequence({item:fields.IntegerField({}),name:"weekly_days"})}}),target_volume_id:fields.IntegerField({name:"target_volume_id"}),name:fields.TextField({min_length:1,name:"name"}),parent_id:fields.IntegerField({name:"parent_id"}),retention_period:fields.IntegerField({name:"retention_period"}),threshold_attr:fields.EnumerationField({name:"threshold_attr",enumeration:["last_accessed","last_modified"]}),frequency:fields.EnumerationField({name:"frequency",enumeration:["none","daily","weekly","monthly","yearly"]}),target_volume_profile_id:fields.IntegerField({name:"target_volume_profile_id"}),path:fields.TextField({name:"path"}),action:fields.EnumerationField({name:"action",enumeration:["copy","move"]}),classifications:fields.Sequence({item:fields.Structure({structure:{id:fields.IntegerField({name:"id"})}}),name:"classifications"}),threshold_units:fields.EnumerationField({name:"threshold_units",enumeration:["days","weeks","months","years"]})}}),method:"POST",name:"update"}),update_tree:model.Request({mimetype:"application/json",responses:{200:{mimetype:"application/json",schema:fields.Sequence({item:fields.Structure({structure:{id:fields.IntegerField({name:"id"})}}),name:"response"})}},url:"/api/v1/recordseries",token:"[[id]]",schema:fields.Sequence({item:fields.Structure({structure:{name:fields.TextField({min_length:1,required:true,name:"name"}),path_linked:fields.BooleanField({name:"path_linked"}),target_volume_id:fields.IntegerField({name:"target_volume_id"}),rank:fields.IntegerField({name:"rank"}),file_plan_id:fields.IntegerField({required:true,name:"file_plan_id"}),parent_id:fields.IntegerField({name:"parent_id"}),target_volume_profile_id:fields.IntegerField({name:"target_volume_profile_id"}),path:fields.TextField({name:"path"}),operation:fields.ConstantField({default_value:"delete",name:"operation",value:"delete"}),id:fields.IntegerField({name:"id"})}}),name:"request"}),method:"POST",name:"update_tree"}),query:model.Request({mimetype:"application/x-www-form-urlencoded",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{total:fields.IntegerField({minimum:0,name:"total"}),resources:fields.Sequence({item:fields.Structure({structure:{retention_period_units:fields.EnumerationField({name:"retention_period_units",enumeration:["days","weeks","months","years"]}),valid_properties:fields.Sequence({item:fields.TextField({}),name:"valid_properties"}),target_volume_id:fields.IntegerField({name:"target_volume_id"}),file_plan_id:fields.IntegerField({name:"file_plan_id"}),retention_period:fields.IntegerField({name:"retention_period"}),threshold_attr:fields.EnumerationField({name:"threshold_attr",enumeration:["last_accessed","last_modified"]}),target_volume_profile_id:fields.IntegerField({name:"target_volume_profile_id"}),id:fields.IntegerField({required:true,name:"id"}),isparent:fields.BooleanField({name:"isparent"}),parent_id:fields.IntegerField({name:"parent_id"}),valid:fields.BooleanField({name:"valid"}),threshold_units:fields.EnumerationField({name:"threshold_units",enumeration:["days","weeks","months","years"]}),status:fields.EnumerationField({name:"status",enumeration:["disabled","enabled"]}),description:fields.TextField({name:"description"}),schedule:fields.Structure({name:"schedule",structure:{monthly_weekday_occurrence:fields.IntegerField({name:"monthly_weekday_occurrence"}),repeat:fields.IntegerField({minimum:1,name:"repeat"}),interval:fields.EnumerationField({required:true,name:"interval",enumeration:["none","daily","weekly","monthly","yearly"]}),monthly_weekday:fields.IntegerField({minimum:0,name:"monthly_weekday",maximum:6}),monthly_style:fields.EnumerationField({name:"monthly_style",enumeration:["date","weekday"]}),time:fields.Sequence({item:fields.IntegerField({}),name:"time"}),date:fields.DateField({name:"date"}),monthly_date:fields.IntegerField({minimum:-1,name:"monthly_date",maximum:31}),weekly_days:fields.Sequence({item:fields.IntegerField({}),name:"weekly_days"})}}),path_linked:fields.BooleanField({name:"path_linked"}),path:fields.TextField({name:"path"}),threshold_value:fields.IntegerField({minimum:1,name:"threshold_value"}),classifications:fields.Sequence({item:fields.Structure({structure:{id:fields.IntegerField({name:"id"}),name:fields.TextField({name:"name"})}}),name:"classifications"}),name:fields.TextField({min_length:1,required:true,name:"name"}),last_run:fields.Structure({name:"last_run",structure:{status:fields.EnumerationField({name:"status",enumeration:["ok","warnings","errors","failed","inprogress","neverrun"]}),warning_count:fields.IntegerField({name:"warning_count"}),identified_count:fields.IntegerField({name:"identified_count"}),identified_up_to_date:fields.BooleanField({name:"identified_up_to_date"}),success_count:fields.IntegerField({name:"success_count"}),error_count:fields.IntegerField({name:"error_count"}),date:fields.DateTimeField({name:"date"})}}),frequency:fields.EnumerationField({name:"frequency",enumeration:["none","daily","weekly","monthly","yearly"]}),action:fields.EnumerationField({name:"action",enumeration:["copy","move"]})}}),required:true,name:"resources"})}})}},url:"/api/v1/recordseries",token:"[[id]]",schema:fields.Structure({name:"request",structure:{sort:fields.QuerySortField({name:"sort"}),query:fields.TextField({name:"query"}),limit:fields.IntegerField({minimum:1,name:"limit"}),offset:fields.IntegerField({minimum:0,name:"offset"})}}),method:"GET",name:"query"}),"delete":model.Request({mimetype:"application/json",responses:{200:{mimetype:"application/json",schema:fields.Structure({name:"response",structure:{isparent:fields.BooleanField({name:"isparent"}),valid_properties:fields.Sequence({item:fields.TextField({}),name:"valid_properties"}),valid:fields.BooleanField({name:"valid"}),id:fields.IntegerField({required:true,name:"id"})}})}},url:"/api/v1/recordseries/[[id]]",token:"[[id]]",schema:fields.Structure({name:"request",structure:{}}),method:"DELETE",name:"delete"})}});


    Model = Model.extend({
        update_tree: function(params) {
            return this._initiateRequest('update_tree', params);
        },

        construct: function() {
            var last_run = this.last_run;
            if(last_run != null) {
                this.statistics = {
                    'identified': last_run.identified_count,
                    'up_to_date': last_run.identified_up_to_date
                };
                if (last_run.status !== 'neverrun') {
                    this.statistics.acted_on = last_run.success_count + last_run.warning_count;
                } else {
                    this.statistics.acted_on = 0;
                }
            }
            if(this.retention_period != null) {
                this.retention = this.retention_period + ' ' + this.retention_period_units;
            } else {
                this.retention = '';
            }
            this.proper_status = (this.valid) ? this.status : null;
        }
    });


return Model;

});